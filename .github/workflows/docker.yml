name: Artifact Registry

on:
  push:
    branches:
      - eds-server-chart
  release:
    types: 
      - published

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGION: us-central1
      ARTIFACT_REPO: docker
      IMAGE_NAME: eds-server
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure auth for GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use gcloud
        run: |
          gcloud --quiet auth configure-docker $REGION-docker.pkg.dev

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
      
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7
      
      - name: Get the build SHA
        id: sha
        env:
          GIT_BRANCH: ${{ steps.branch-name.outputs.current_branch }}
          PR_SHA: ${{ github.event.pull_request.head.sha }}
          MERGE_SHA: ${{ github.sha }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          if [ "$GIT_BRANCH" = "main" ];
          then
            echo sha=$MERGE_SHA >> $GITHUB_OUTPUT
          elif [ -n "$PR_SHA" ]; then
            echo sha=$PR_SHA >> $GITHUB_OUTPUT
          else
            echo sha=$COMMIT_SHA >> $GITHUB_OUTPUT
          fi

      - name: Construct the tags
        id: construct_tags
        run: |
          # default to the SHA
          TAGS=${{ steps.sha.outputs.sha }}
    
          # if we're on the main branch, add the beta tag
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
            TAGS="$TAGS beta"
          fi
    
          # if it's a release, use the version and latest tags
          if [[ $GITHUB_EVENT_NAME == 'release' ]]; then
            VERSION_TAG=$(echo $GITHUB_REF | sed 's/refs\/tags\///')
            TAGS="$TAGS $VERSION_TAG latest"
          fi

          for TAG in $TAGS; do
            TAG_LIST+="${{ env.REGION }}-docker.pkg.dev/${{ secrets.PLATFORM_PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:$TAG,"
          done

          # remove the trailing comma
          TAG_LIST=${TAG_LIST%,}

          echo tags=$TAG_LIST >> $GITHUB_OUTPUT
          
      - name: Build and push to Artifact Registry
        uses: docker/build-push-action@v4
        env:
          BUILD_DATE: ${{ steps.date.outputs.date }}
          GIT_BRANCH: ${{ steps.branch-name.outputs.current_branch }}
          GIT_SHA: ${{ steps.sha.outputs.sha }}
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ${{ steps.construct_tags.outputs.tags }}
          build-args: |
            BUILD_DATE=$BUILD_DATE
            GIT_BRANCH=$GIT_BRANCH 
            GIT_SHA=$GIT_SHA


